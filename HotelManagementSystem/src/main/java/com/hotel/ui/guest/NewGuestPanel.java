/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package main.java.com.hotel.ui.guest;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.sql.*;
import java.util.Date;
import java.util.regex.Pattern;
import main.java.com.hotel.config.DatabaseConnection;
import java.text.SimpleDateFormat;
import java.awt.Container;

/**
 *
 * @author shalaka
 */
public class NewGuestPanel extends javax.swing.JPanel {

    /**
     * Creates new form NewGuestPanel
     */
    public NewGuestPanel() {
        initComponents();
    }

    public void loadGuestData(GuestManagementPanel.GuestData guest) {
        // Personal Information
        personalInformation_fistName.setText(guest.firstName);
        personalInformation_lastName.setText(guest.lastName);

        // Gender
        if ("Male".equals(guest.gender)) {
            personalInformation_genderMale.setSelected(true);
        } else if ("Female".equals(guest.gender)) {
            personalInformation_genderFemale.setSelected(true);
        } else if ("Other".equals(guest.gender)) {
            personalInformation_genderOther.setSelected(true);
        }

        // Date of Birth
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date dob = sdf.parse(guest.dateOfBirth);
            personalInformation_dateOfBirth.setDate(dob);
        } catch (Exception e) {
            personalInformation_dateOfBirth.setDate(null);
        }

        personalInformation_nationality.setText(guest.nationality);

        // Contact Information
        contactInfomamtion_phoneNumber.setText(guest.phone);
        contactInfomamtion_email.setText(guest.email);

        // Address
        if (guest.address != null) {
            String[] addressParts = guest.address.split(",", 2);
            contactInfomamtion_addressLine1.setText(addressParts[0].trim());
            if (addressParts.length > 1) {
                contactInfomamtion_addressLine2.setText(addressParts[1].trim());
            }
        }

        contactInfomamtion_city.setText(guest.city);
        contactInfomamtion_state.setText(guest.state);
        contactInfomamtion_country.setText(guest.country);
        contactInfomamtion_postalCode.setText(guest.postalCode);

        // Identification
        if (guest.idType != null) {
            for (int i = 0; i < identification_idType.getItemCount(); i++) {
                if (identification_idType.getItemAt(i).equals(guest.idType)) {
                    identification_idType.setSelectedIndex(i);
                    break;
                }
            }
        }
        identification_idNumber.setText(guest.idNumber);

        // Preferences
        preference_vipStatus.setSelectedItem(guest.vipStatus ? "Yes" : "No");
        preference_loyaltyProgramEnroll.setSelected(guest.loyaltyPoints > 0);
        preference_specialRequests.setText(guest.specialRequests);

        // Store the guest ID for update
        this.currentGuestId = guest.guestId;
    }

    public void setSaveButtonEnabled(boolean enabled) {
        save_button.setEnabled(enabled);
    }

    public void setUpdateButtonEnabled(boolean enabled) {
        update_buton.setEnabled(enabled);
    }

    private int currentGuestId = -1;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        personalInformation_fistName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        personalInformation_lastName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        personalInformation_genderMale = new javax.swing.JRadioButton();
        personalInformation_genderFemale = new javax.swing.JRadioButton();
        personalInformation_genderOther = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        personalInformation_dateOfBirth = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        personalInformation_nationality = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        contactInfomamtion_phoneNumber = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        contactInfomamtion_email = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        contactInfomamtion_addressLine1 = new javax.swing.JTextField();
        contactInfomamtion_addressLine2 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        contactInfomamtion_city = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        contactInfomamtion_state = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        contactInfomamtion_country = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        contactInfomamtion_postalCode = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        identification_idType = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        identification_idNumber = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        identification_issuingCountry = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        identification_expirationDate = new com.toedter.calendar.JDateChooser();
        jPanel7 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        preference_roomPreference = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        preference_specialRequests = new javax.swing.JTextArea();
        jLabel26 = new javax.swing.JLabel();
        preference_vipStatus = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        preference_loyaltyProgramEnroll = new javax.swing.JCheckBox();
        cancel_button = new javax.swing.JButton();
        save_button = new javax.swing.JButton();
        update_buton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(930, 660));

        jPanel1.setPreferredSize(new java.awt.Dimension(930, 820));

        jLabel1.setText("New Guest Registration");

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setPreferredSize(new java.awt.Dimension(450, 125));

        jLabel2.setText("Personal Information");

        jLabel4.setText("First Name :");

        jLabel5.setText("Last Name :");

        jLabel6.setText("Gender :");

        buttonGroup1.add(personalInformation_genderMale);
        personalInformation_genderMale.setText("Male");

        buttonGroup1.add(personalInformation_genderFemale);
        personalInformation_genderFemale.setText("Female");

        buttonGroup1.add(personalInformation_genderOther);
        personalInformation_genderOther.setText("Other");

        jLabel7.setText("Date of Birth :");

        jLabel8.setText("Nationality :");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(personalInformation_fistName, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(personalInformation_lastName))
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(personalInformation_genderFemale)
                            .addComponent(personalInformation_genderMale)
                            .addComponent(personalInformation_genderOther)
                            .addComponent(personalInformation_dateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(personalInformation_nationality)))
                .addContainerGap(143, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(personalInformation_fistName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(personalInformation_lastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(personalInformation_genderMale)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(personalInformation_genderFemale)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(personalInformation_genderOther)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(personalInformation_dateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(personalInformation_nationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setText("Contact Information");

        jLabel9.setText("Phone Number :");

        jLabel10.setText("Email :");

        jLabel11.setText("Address :");

        jLabel12.setText("line 1");

        jLabel13.setText("line 2");

        jLabel14.setText("City :");

        jLabel15.setText("State/Province :");

        jLabel16.setText("Country :");

        jLabel17.setText("Postal Code :");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(contactInfomamtion_phoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(contactInfomamtion_email, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(contactInfomamtion_city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(contactInfomamtion_state, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(contactInfomamtion_addressLine2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(contactInfomamtion_addressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(contactInfomamtion_country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(contactInfomamtion_postalCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(182, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {contactInfomamtion_addressLine1, contactInfomamtion_addressLine2, contactInfomamtion_city, contactInfomamtion_country, contactInfomamtion_email, contactInfomamtion_phoneNumber, contactInfomamtion_postalCode, contactInfomamtion_state});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(contactInfomamtion_phoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(contactInfomamtion_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(contactInfomamtion_addressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(contactInfomamtion_addressLine2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(contactInfomamtion_city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(contactInfomamtion_state, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(contactInfomamtion_country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(contactInfomamtion_postalCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel6.setPreferredSize(new java.awt.Dimension(450, 100));

        jLabel18.setText("Identification");

        jLabel19.setText("ID Type :");

        identification_idType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select ID Type", "Passport", "National ID", "Driver License", "Other" }));

        jLabel20.setText("ID Number :");

        jLabel21.setText("Issuing Country :");

        jLabel22.setText("Expiration Date :");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(identification_idType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(identification_idNumber)
                            .addComponent(identification_issuingCountry)
                            .addComponent(identification_expirationDate, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE))))
                .addContainerGap(252, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addGap(18, 18, 18)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(identification_idType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(identification_idNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(identification_issuingCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(identification_expirationDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel7.setPreferredSize(new java.awt.Dimension(450, 322));

        jLabel23.setText("Preferences");

        jLabel24.setText("Room Preference :");

        preference_roomPreference.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Room" }));

        jLabel25.setText("Special Requirements :");

        preference_specialRequests.setColumns(20);
        preference_specialRequests.setRows(5);
        jScrollPane2.setViewportView(preference_specialRequests);

        jLabel26.setText("VIP Status :");

        preference_vipStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No", "Yes" }));

        jLabel27.setText("Loyalty Program :");

        preference_loyaltyProgramEnroll.setText("Enroll");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(preference_loyaltyProgramEnroll)
                            .addComponent(preference_roomPreference, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(preference_vipStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {preference_roomPreference, preference_vipStatus});

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addGap(18, 18, 18)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(preference_roomPreference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(preference_vipStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(preference_loyaltyProgramEnroll)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cancel_button.setText("Cancel");

        save_button.setText("Save");
        save_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_buttonActionPerformed(evt);
            }
        });

        update_buton.setText("Update");
        update_buton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_butonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cancel_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(update_buton)
                        .addGap(18, 18, 18)
                        .addComponent(save_button)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel_button)
                    .addComponent(save_button)
                    .addComponent(update_buton))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 930, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void save_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_buttonActionPerformed
        try {
            // Validate all form data
            if (validateFormData()) {
                // Save guest data to database using prepared statement method
                saveGuestData();
                // Alternative: Use saveGuestDataAlternative() if you prefer using your executeIUD method

                JOptionPane.showMessageDialog(this,
                        "Guest registered successfully!",
                        "Success",
                        JOptionPane.INFORMATION_MESSAGE);
                clearForm();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Error saving guest data: " + e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_save_buttonActionPerformed

    private void update_butonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_butonActionPerformed
        try {
            // Validate all form data
            if (validateFormData()) {
                // Update guest data in database
                updateGuestData();
                
                JOptionPane.showMessageDialog(this,
                    "Guest information updated successfully!",
                    "Success",
                    JOptionPane.INFORMATION_MESSAGE);
                
                // Refresh the guest management panel
                refreshGuestManagementPanel();
                
                // Clear form and reset buttons
                clearForm();
                setSaveButtonEnabled(true);
                setUpdateButtonEnabled(false);
                currentGuestId = -1;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                "Error updating guest data: " + e.getMessage(),
                "Error",
                JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_update_butonActionPerformed

    private void updateGuestData() throws Exception {
        Connection conn = null;
        PreparedStatement pstmt = null;

        try {
            conn = DatabaseConnection.getConnection();

            String sql = "UPDATE guest SET first_name=?, last_name=?, gender=?, date_of_birth=?, " +
                    "contact_number=?, email=?, address=?, city=?, state=?, country=?, postal_code=?, " +
                    "nationality=?, id_type=?, id_number=?, preference_room=?, special_requests=?, " +
                    "vip_status=?, loyalty_points=? WHERE guest_id=?";

            pstmt = conn.prepareStatement(sql);

            // Personal Information
            pstmt.setString(1, personalInformation_fistName.getText().trim());
            pstmt.setString(2, personalInformation_lastName.getText().trim());

            // Gender
            String gender = null;
            if (personalInformation_genderMale.isSelected()) {
                gender = "Male";
            } else if (personalInformation_genderFemale.isSelected()) {
                gender = "Female";
            } else if (personalInformation_genderOther.isSelected()) {
                gender = "Other";
            }
            pstmt.setString(3, gender);

            // Date of Birth
            pstmt.setDate(4, new java.sql.Date(personalInformation_dateOfBirth.getDate().getTime()));

            // Contact Information
            pstmt.setString(5, contactInfomamtion_phoneNumber.getText().trim());
            pstmt.setString(6, isEmptyOrNull(contactInfomamtion_email.getText()) ? null : contactInfomamtion_email.getText().trim());

            // Address (combine address lines)
            String fullAddress = contactInfomamtion_addressLine1.getText().trim();
            if (!isEmptyOrNull(contactInfomamtion_addressLine2.getText())) {
                fullAddress += ", " + contactInfomamtion_addressLine2.getText().trim();
            }
            pstmt.setString(7, isEmptyOrNull(fullAddress) ? null : fullAddress);

            pstmt.setString(8, isEmptyOrNull(contactInfomamtion_city.getText()) ? null : contactInfomamtion_city.getText().trim());
            pstmt.setString(9, isEmptyOrNull(contactInfomamtion_state.getText()) ? null : contactInfomamtion_state.getText().trim());
            pstmt.setString(10, contactInfomamtion_country.getText().trim());
            pstmt.setString(11, isEmptyOrNull(contactInfomamtion_postalCode.getText()) ? null : contactInfomamtion_postalCode.getText().trim());
            pstmt.setString(12, personalInformation_nationality.getText().trim());

            // Identification
            if (identification_idType.getSelectedIndex() > 0) {
                pstmt.setString(13, identification_idType.getSelectedItem().toString());
                pstmt.setString(14, identification_idNumber.getText().trim());
            } else {
                pstmt.setNull(13, Types.VARCHAR);
                pstmt.setNull(14, Types.VARCHAR);
            }

            // Preferences
            if (preference_roomPreference.getSelectedIndex() > 0) {
                pstmt.setNull(15, Types.INTEGER); // For now, set as null
            } else {
                pstmt.setNull(15, Types.INTEGER);
            }

            pstmt.setString(16, isEmptyOrNull(preference_specialRequests.getText()) ? null : preference_specialRequests.getText().trim());

            // VIP Status
            boolean isVip = preference_vipStatus.getSelectedIndex() > 0
                    && !preference_vipStatus.getSelectedItem().toString().equals("None");
            pstmt.setBoolean(17, isVip);

            // Loyalty Points
            int loyaltyPoints = preference_loyaltyProgramEnroll.isSelected() ? 100 : 0;
            pstmt.setInt(18, loyaltyPoints);

            // Guest ID for WHERE clause
            pstmt.setInt(19, currentGuestId);

            // Execute the update
            int rowsAffected = pstmt.executeUpdate();

            if (rowsAffected == 0) {
                throw new SQLException("Updating guest failed, no rows affected.");
            }

        } finally {
            if (pstmt != null) {
                pstmt.close();
            }
        }
    }

    private void refreshGuestManagementPanel() {
        // Get the parent GuestMainPanel
        Container parent = this.getParent();
        while (parent != null && !(parent instanceof GuestMainPanel)) {
            parent = parent.getParent();
        }

        if (parent instanceof GuestMainPanel) {
            GuestMainPanel guestMainPanel = (GuestMainPanel) parent;
            // Switch back to the Guest Management tab
            guestMainPanel.getGuestsTabs().setSelectedIndex(0);
            // Refresh the guest list
            guestMainPanel.getGuestManagementPanel().refreshGuestsData();
        }
    }
    
    private boolean validateFormData() {
        StringBuilder errorMessages = new StringBuilder();

        // Validate Personal Information
        if (isEmptyOrNull(personalInformation_fistName.getText())) {
            errorMessages.append("• First Name is required\n");
        }

        if (isEmptyOrNull(personalInformation_lastName.getText())) {
            errorMessages.append("• Last Name is required\n");
        }

        if (!personalInformation_genderMale.isSelected()
                && !personalInformation_genderFemale.isSelected()
                && !personalInformation_genderOther.isSelected()) {
            errorMessages.append("• Gender selection is required\n");
        }

        if (personalInformation_dateOfBirth.getDate() == null) {
            errorMessages.append("• Date of Birth is required\n");
        } else {
            // Check if age is reasonable (between 0 and 120 years)
            Date birthDate = personalInformation_dateOfBirth.getDate();
            Date currentDate = new Date();
            long ageInMillis = currentDate.getTime() - birthDate.getTime();
            int age = (int) (ageInMillis / (365.25 * 24 * 60 * 60 * 1000));

            if (age < 0) {
                errorMessages.append("• Date of Birth cannot be in the future\n");
            } else if (age > 120) {
                errorMessages.append("• Date of Birth seems unrealistic\n");
            }
        }

        if (isEmptyOrNull(personalInformation_nationality.getText())) {
            errorMessages.append("• Nationality is required\n");
        }

        // Validate Contact Information
        if (isEmptyOrNull(contactInfomamtion_phoneNumber.getText())) {
            errorMessages.append("• Phone Number is required\n");
        } else if (!isValidPhoneNumber(contactInfomamtion_phoneNumber.getText())) {
            errorMessages.append("• Phone Number format is invalid\n");
        }

        if (!isEmptyOrNull(contactInfomamtion_email.getText())
                && !isValidEmail(contactInfomamtion_email.getText())) {
            errorMessages.append("• Email format is invalid\n");
        }

        if (isEmptyOrNull(contactInfomamtion_country.getText())) {
            errorMessages.append("• Country is required\n");
        }

        // Validate Identification (Optional but if provided, must be complete)
        if (identification_idType.getSelectedIndex() > 0
                || !isEmptyOrNull(identification_idNumber.getText())
                || !isEmptyOrNull(identification_issuingCountry.getText())
                || identification_expirationDate.getDate() != null) {

            if (identification_idType.getSelectedIndex() == 0) {
                errorMessages.append("• ID Type must be selected when providing identification\n");
            }

            if (isEmptyOrNull(identification_idNumber.getText())) {
                errorMessages.append("• ID Number is required when providing identification\n");
            }

            if (isEmptyOrNull(identification_issuingCountry.getText())) {
                errorMessages.append("• Issuing Country is required when providing identification\n");
            }

            if (identification_expirationDate.getDate() != null) {
                Date expiryDate = identification_expirationDate.getDate();
                Date currentDate = new Date();
                if (expiryDate.before(currentDate)) {
                    errorMessages.append("• ID has expired\n");
                }
            }
        }

        // Show validation errors if any
        if (errorMessages.length() > 0) {
            JOptionPane.showMessageDialog(this,
                    "Please correct the following errors:\n\n" + errorMessages.toString(),
                    "Validation Error",
                    JOptionPane.WARNING_MESSAGE);
            return false;
        }

        return true;
    }

    private void saveGuestData() throws Exception {
        Connection conn = null;
        PreparedStatement pstmt = null;

        try {
            // Get database connection using your existing DatabaseConnection class
            conn = DatabaseConnection.getConnection();

            String sql = "INSERT INTO guest (first_name, last_name, gender, date_of_birth, "
                    + "contact_number, email, address, city, state, country, postal_code, "
                    + "nationality, id_type, id_number, preference_room, special_requests, "
                    + "vip_status, loyalty_points) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";

            pstmt = conn.prepareStatement(sql);

            // Personal Information
            pstmt.setString(1, personalInformation_fistName.getText().trim());
            pstmt.setString(2, personalInformation_lastName.getText().trim());

            // Gender
            String gender = null;
            if (personalInformation_genderMale.isSelected()) {
                gender = "Male";
            } else if (personalInformation_genderFemale.isSelected()) {
                gender = "Female";
            } else if (personalInformation_genderOther.isSelected()) {
                gender = "Other";
            }
            pstmt.setString(3, gender);

            // Date of Birth
            pstmt.setDate(4, new java.sql.Date(personalInformation_dateOfBirth.getDate().getTime()));

            // Contact Information
            pstmt.setString(5, contactInfomamtion_phoneNumber.getText().trim());
            pstmt.setString(6, isEmptyOrNull(contactInfomamtion_email.getText()) ? null : contactInfomamtion_email.getText().trim());

            // Address (combine address lines)
            String fullAddress = contactInfomamtion_addressLine1.getText().trim();
            if (!isEmptyOrNull(contactInfomamtion_addressLine2.getText())) {
                fullAddress += ", " + contactInfomamtion_addressLine2.getText().trim();
            }
            pstmt.setString(7, isEmptyOrNull(fullAddress) ? null : fullAddress);

            pstmt.setString(8, isEmptyOrNull(contactInfomamtion_city.getText()) ? null : contactInfomamtion_city.getText().trim());
            pstmt.setString(9, isEmptyOrNull(contactInfomamtion_state.getText()) ? null : contactInfomamtion_state.getText().trim());
            pstmt.setString(10, contactInfomamtion_country.getText().trim());
            pstmt.setString(11, isEmptyOrNull(contactInfomamtion_postalCode.getText()) ? null : contactInfomamtion_postalCode.getText().trim());
            pstmt.setString(12, personalInformation_nationality.getText().trim());

            // Identification
            if (identification_idType.getSelectedIndex() > 0) {
                pstmt.setString(13, identification_idType.getSelectedItem().toString());
                pstmt.setString(14, identification_idNumber.getText().trim());
            } else {
                pstmt.setNull(13, Types.VARCHAR);
                pstmt.setNull(14, Types.VARCHAR);
            }

            // Preferences
            if (preference_roomPreference.getSelectedIndex() > 0) {
                // You'll need to map room preference to room_id
                pstmt.setNull(15, Types.INTEGER); // For now, set as null
            } else {
                pstmt.setNull(15, Types.INTEGER);
            }

            pstmt.setString(16, isEmptyOrNull(preference_specialRequests.getText()) ? null : preference_specialRequests.getText().trim());

            // VIP Status
            boolean isVip = preference_vipStatus.getSelectedIndex() > 0
                    && !preference_vipStatus.getSelectedItem().toString().equals("None");
            pstmt.setBoolean(17, isVip);

            // Loyalty Points (initial value)
            int initialPoints = preference_loyaltyProgramEnroll.isSelected() ? 100 : 0;
            pstmt.setInt(18, initialPoints);

            // Execute the insert
            int rowsAffected = pstmt.executeUpdate();

            if (rowsAffected == 0) {
                throw new SQLException("Creating guest failed, no rows affected.");
            }

        } finally {
            // Close resources
            if (pstmt != null) {
                pstmt.close();
            }
            if (conn != null) {
                conn.close();
            }
        }
    }

// Helper validation methods
    private boolean isEmptyOrNull(String text) {
        return text == null || text.trim().isEmpty();
    }

    private boolean isValidEmail(String email) {
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
        Pattern pattern = Pattern.compile(emailRegex);
        return pattern.matcher(email).matches();
    }

    private boolean isValidPhoneNumber(String phoneNumber) {
        // Remove all non-digit characters
        String digitsOnly = phoneNumber.replaceAll("[^0-9]", "");

        // Check if it has at least 7 digits and at most 15 digits
        return digitsOnly.length() >= 7 && digitsOnly.length() <= 15;
    }

    private void clearForm() {
        // Clear Personal Information
        personalInformation_fistName.setText("");
        personalInformation_lastName.setText("");
        buttonGroup1.clearSelection();
        personalInformation_dateOfBirth.setDate(null);
        personalInformation_nationality.setText("");

        // Clear Contact Information
        contactInfomamtion_phoneNumber.setText("");
        contactInfomamtion_email.setText("");
        contactInfomamtion_addressLine1.setText("");
        contactInfomamtion_addressLine2.setText("");
        contactInfomamtion_city.setText("");
        contactInfomamtion_state.setText("");
        contactInfomamtion_country.setText("");
        contactInfomamtion_postalCode.setText("");

        // Clear Identification
        identification_idType.setSelectedIndex(0);
        identification_idNumber.setText("");
        identification_issuingCountry.setText("");
        identification_expirationDate.setDate(null);

        // Clear Preferences
        preference_roomPreference.setSelectedIndex(0);
        preference_specialRequests.setText("");
        preference_vipStatus.setSelectedIndex(0);
        preference_loyaltyProgramEnroll.setSelected(false);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancel_button;
    private javax.swing.JTextField contactInfomamtion_addressLine1;
    private javax.swing.JTextField contactInfomamtion_addressLine2;
    private javax.swing.JTextField contactInfomamtion_city;
    private javax.swing.JTextField contactInfomamtion_country;
    private javax.swing.JTextField contactInfomamtion_email;
    private javax.swing.JTextField contactInfomamtion_phoneNumber;
    private javax.swing.JTextField contactInfomamtion_postalCode;
    private javax.swing.JTextField contactInfomamtion_state;
    private com.toedter.calendar.JDateChooser identification_expirationDate;
    private javax.swing.JTextField identification_idNumber;
    private javax.swing.JComboBox<String> identification_idType;
    private javax.swing.JTextField identification_issuingCountry;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser personalInformation_dateOfBirth;
    private javax.swing.JTextField personalInformation_fistName;
    private javax.swing.JRadioButton personalInformation_genderFemale;
    private javax.swing.JRadioButton personalInformation_genderMale;
    private javax.swing.JRadioButton personalInformation_genderOther;
    private javax.swing.JTextField personalInformation_lastName;
    private javax.swing.JTextField personalInformation_nationality;
    private javax.swing.JCheckBox preference_loyaltyProgramEnroll;
    private javax.swing.JComboBox<String> preference_roomPreference;
    private javax.swing.JTextArea preference_specialRequests;
    private javax.swing.JComboBox<String> preference_vipStatus;
    private javax.swing.JButton save_button;
    private javax.swing.JButton update_buton;
    // End of variables declaration//GEN-END:variables
}
